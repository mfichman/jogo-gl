# Copyright (c) 2013 Matt Fichman
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, APEXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

BufferState = DIRTY | SYNCED
BufferTarget = VERTEX | ELEMENT

Buffer < Object {
    # Hardware vertex or normal buffer.  The interface of this buffer is meant
    # to be similar to OpenGL 1.1 vertex/normal/color functions, because those
    # are well-understood and easy to use.  However, the buffer actually uses
    # an OpenGL 2.0+ vertex buffer object.  Data is stored temporarily in an
    # in-memory buffer before being synced with the hardware by setting the
    # 'state' attribute.
    state BufferState
    target BufferTarget
    id Int
    size Int
    capacity Int

    DEFAULT_SIZE = 1024

    @init(target BufferTarget) native {}
    @destroy() native {}
    val4f(x Float, y Float, z Float, w Float) native {}
    val3f(x Float, y Float, z Float) native {}
    val2f(x Float, y Float) native {}
    val1f(x Float) native {}
    sync() native {}
}
