# Copyright (c) 2010 Matt Fichman
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, APEXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

main() Int {
    
    mode = Gl::VideoMode(800, 600, 0)
    window = Gl::Window(mode)
    Gl::viewport(0, 0, 800, 600) 
    Gl::check()
    Gl::matrix_mode(Gl::PROJECTION)
    Gl::check()
    Gl::load_identity()
    Gl::check()
    Gl::perspective(60., 800./600., 1., 100.)
    Gl::check()
    Gl::matrix_mode(Gl::MODELVIEW)
    Gl::check()
    Gl::init()
#    if not Gl::supported(3, 2) {
#        Io::stderr().println("OpenGL 3.2 is not supported\n")
#        ret 1
#    }

    Io::manager().reactor() func() { Gl::poll() }

    while true {#window.visible {
        Gl::clear_color(1., 0., 0., 1.)
        Gl::check()
        Gl::clear(Gl::COLOR_BUFFER_BIT)
        Gl::check()
        Gl::load_identity()
        Gl::check()
        Gl::translatef(0., 0., -5.)
        Gl::check()
    
        Gl::begin(Gl::QUADS)
        Gl::vertex3f(-1., -1., 0.)
        Gl::vertex3f(-1., 1., 0.)
        Gl::vertex3f(1., 1., 0.)
        Gl::vertex3f(1., -1., 0.)
        Gl::end()
        Gl::check()

        window.display()
        yield
    }
    ret 0
}
